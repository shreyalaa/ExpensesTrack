{"version":3,"sources":["context/AppReducer.jsx","context/GlobalState.jsx","components/AddTransaction.jsx","components/Balance.jsx","components/Header.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transaction","filter","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","className","onSubmit","e","preventDefault","newTransaction","Math","floor","random","onChange","target","placeholder","Button","style","backgroundColor","marginTop","fontFamily","fontWeight","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","val","income","expense","Transaction","props","sign","trans","abs","onClick","TransactionList","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46b1c3e6.chunk.js","sourcesContent":["export default (state , action) =>{\r\n  switch(action.type){\r\n  \r\n    case \"delete_transaction\":\r\n      return {\r\n        ...state ,\r\n        transaction: state.transaction.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n\r\n      case \"ADD_transaction\":\r\n        return{\r\n          ...state,\r\n          transaction: [action.payload , ...state.transaction]\r\n        }\r\n      default:\r\n          return state;\r\n  }\r\n}","import React, { createContext, useReducer } from  \"react\"\r\nimport AppReducer from \"./AppReducer\"\r\n//initial state\r\n\r\nconst initialState ={\r\n    transaction:[]\r\n} \r\n\r\n//create context\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n\r\n\r\n\r\n\r\n//provider compnet\r\n\r\nexport const GlobalProvider = ({ children}) =>{\r\n    const [state , dispatch] = useReducer(AppReducer , initialState)\r\n    //Actions\r\n    const addTransaction =(transaction)=>{\r\n        dispatch({\r\n            type: \"ADD_transaction\",\r\n            payload:  transaction\r\n        })\r\n    } \r\n\r\n    const deleteTransaction = (id)=>{\r\n        dispatch({\r\n            type: \"delete_transaction\",\r\n            payload: id\r\n        })\r\n    }\r\n    return(\r\n        <GlobalContext.Provider value = {{\r\n            transaction: state.transaction,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n         {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState ,useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nconst AddTransaction = () =>{\r\n\r\n    const [text , setText] = useState(\"\");\r\n    const [amount , setAmount] = useState(0)\r\n\r\n    const {addTransaction} = useContext(GlobalContext)\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() *10000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n             addTransaction(newTransaction);\r\n    }\r\n    return(\r\n        <div>\r\n        <h3 className = \"head\">Add new transaction</h3>\r\n        <form onSubmit = {onSubmit}>\r\n        <div className = \"text\">\r\n        <label>Text:</label><br/>\r\n        <input value = {text} onChange = {(e) =>{setText(e.target.value)}} placeholder = \"enter text\" />\r\n        </div>\r\n        <div className = \"amount\">\r\n        <label >Amount:<br/>(negative - expense , positive - income)</label><br/>\r\n        <input value = {amount} onChange={(e)=>{setAmount(e.target.value)}} placeholder = \"enter the amount\"/>\r\n        </div>\r\n        <Button type = \"submit\" style = {{backgroundColor:\"blueviolet\" ,marginTop:\"1cm\" ,fontFamily:\"cursive\" ,fontWeight:\"bold\"}}>Add Transaction</Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction;","import React, { useContext } from \"react\";\r\nimport \"../App.css\"\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nconst Balance = () =>\r\n{   \r\n    const {transaction} = useContext(GlobalContext);\r\n\r\n    const amounts = transaction.map((value)=> value.amount)\r\n    const total = amounts.reduce((acc , item)=>(acc += item), 0).toFixed(2)\r\n    return(\r\n        <div className =\"balance\">\r\n        <h4> Your Balance</h4>\r\n        <h1> {total}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance;","import React from \"react\";\r\nimport \"../App.css\"\r\nconst Header = () =>{\r\n    return(\r\n        <div className = \"header\">\r\n        <h1>Expense Tracker</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\nconst IncomeExpenses = ()=>{\r\n    const {transaction} = useContext(GlobalContext)\r\n    \r\n    const amounts = transaction.map((val) =>val.amount)\r\n    const income = amounts\r\n    .filter((val)=> val>0)\r\n    .reduce((acc , item)=> acc +=item ,0)\r\n    .toFixed(2)\r\n\r\n    const expense = amounts.filter((val)=>val< 0).reduce((acc , item)=> acc+= item ,0).toFixed(2)\r\n    return(\r\n        <div>\r\n           <div className = \"income\">\r\n           <h4> income</h4> \r\n           <p>{income}</p>\r\n           </div>\r\n           <div className = \"expenses\">\r\n           <h4> expenses</h4>\r\n           <p>{expense}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\nexport default IncomeExpenses;","import React, { useContext } from \"react\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Button from '@material-ui/core/Button';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nconst Transaction = (props)=>{\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    const sign = (props.amount <0)? '-' : '+'\r\n        return(\r\n        <li className = \"list\" > \r\n            {props.trans} <span >||   {sign}Rs. {Math.abs(props.amount)}</span>\r\n            <Button onClick = {()=>deleteTransaction(props.id)} ><DeleteForeverIcon/></Button>\r\n            </li>\r\n    )\r\n}\r\nexport default Transaction;","import React, { useContext } from \"react\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"../App.css\";\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\nimport Transaction from \"./Transaction\";\r\nconst TransactionList = () =>{\r\n    const {transaction} = useContext(GlobalContext);\r\n    console.log(transaction)\r\n\r\n    return(\r\n        <div>\r\n         <h4 className = \"history\">History</h4>\r\n         <ul >\r\n         {transaction.map((trans)=>(\r\n            <Transaction id = {trans.id} amount = {trans.amount} key = {trans.id} trans = {trans.text}/>\r\n         ))}\r\n        \r\n         </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TransactionList;","import React from \"react\";\nimport './App.css';\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport Header from \"./components/Header\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\n\nconst App =() =>{\n  return (\n    <GlobalProvider>\n       <Header/>\n       <div  className=\"App\">\n       <Balance/>\n       <IncomeExpenses/>\n       <TransactionList/>\n       <AddTransaction></AddTransaction>\n       </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}